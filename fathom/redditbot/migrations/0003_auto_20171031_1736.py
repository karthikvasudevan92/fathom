# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-31 12:06
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('redditbot', '0002_auto_20170918_0513'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aliase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'aliase',
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('candidate', models.CharField(max_length=30)),
                ('word_index', models.IntegerField()),
                ('word_tag', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'candidate',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com_link_id', models.CharField(max_length=20)),
                ('body', models.TextField()),
                ('score', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'dimension',
            },
        ),
        migrations.CreateModel(
            name='Fodder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lim', models.PositiveIntegerField()),
            ],
            options={
                'db_table': 'fodder',
            },
        ),
        migrations.CreateModel(
            name='Hunt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'hunt',
            },
        ),
        migrations.CreateModel(
            name='Hunt_relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('hunt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Hunt')),
            ],
            options={
                'db_table': 'hunt_relation',
            },
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('symbol', models.CharField(max_length=100)),
                ('aliases', models.CharField(max_length=2000)),
                ('bqmultiplier', models.FloatField()),
                ('isbase', models.PositiveSmallIntegerField()),
                ('isc', models.PositiveSmallIntegerField()),
                ('usage', models.CharField(max_length=500)),
                ('bridge', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('bq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Quantity')),
                ('d', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Dimension')),
            ],
            options={
                'db_table': 'quantity',
            },
        ),
        migrations.CreateModel(
            name='Quantity_aliase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aliase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Aliase')),
                ('quantity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Quantity')),
            ],
            options={
                'db_table': 'quantity_aliase',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_link_id', models.CharField(max_length=20)),
                ('title', models.TextField()),
                ('score', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'submission',
            },
        ),
        migrations.CreateModel(
            name='Subreddit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'subreddit',
            },
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('hasquantity', models.TextField()),
            ],
            options={
                'db_table': 'thing',
            },
        ),
        migrations.DeleteModel(
            name='Redditcontent',
        ),
        migrations.RenameField(
            model_name='word',
            old_name='word',
            new_name='wordstr',
        ),
        migrations.AlterModelTable(
            name='wordtype',
            table='wordtype',
        ),
        migrations.AddField(
            model_name='submission',
            name='subreddit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Subreddit'),
        ),
        migrations.AddField(
            model_name='quantity',
            name='thing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Thing'),
        ),
        migrations.AddField(
            model_name='fodder',
            name='subreddits',
            field=models.ManyToManyField(to='redditbot.Subreddit'),
        ),
        migrations.AddField(
            model_name='comment',
            name='sub',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Submission'),
        ),
        migrations.AddField(
            model_name='candidate',
            name='com',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='redditbot.Comment'),
        ),
    ]
